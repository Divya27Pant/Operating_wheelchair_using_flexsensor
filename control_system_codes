const int FLEX_PIN = A0; // Pin connected to voltage divider output
// Measure the voltage at 5V and the actual resistance of your
// 47k resistor, and enter them below:
const float VCC =3.3; // Measured voltage of Ardunio 5V line
const float R_DIV =31600.0; // Measured resistance of 3.3k resistor

// Upload the code, then try to adjust these values to more
// accurately calculate bend degree.
const float STRAIGHT_RESISTANCE =40000.0; // resistance when straight
const float BEND_RESISTANCE =93400.0; // resistance at 90 deg

const int m1  = 6;  
const int m2  = 7;  
//Motor B
const int m3  = 8;   
const int m4  = 9;


void setup() {
  // put your setup code here, to run once:
Serial.begin(9600);
pinMode(FLEX_PIN, INPUT);
pinMode(m1, OUTPUT);
pinMode(m2, OUTPUT);
pinMode(m3, OUTPUT);
pinMode(m4, OUTPUT); 
}

void loop() {
  // put your main code here, to run repeatedly:
int flexADC=analogRead(FLEX_PIN);
float flexV=flexADC* VCC / 1023.0;
float flexR= R_DIV * (VCC / flexV-1.0);
//Serial.println("Resistance: "+String(flexR) +" ohms");

// Use the calculated resistance to estimate the sensor's
// bend angle:
float angle = map(flexR, STRAIGHT_RESISTANCE, BEND_RESISTANCE,0, 90.0);
//Serial.println("Bend: "+String(angle) +" degrees");
//Serial.println();
if(angle<=-10.00)
{
   digitalWrite(m1, HIGH);
    digitalWrite(m2, LOW);
    digitalWrite(m3, HIGH);
    digitalWrite(m4, LOW);
}

else if (angle>-10 && angle<=20)
{
    digitalWrite(m1, LOW);
    digitalWrite(m2, LOW);
    digitalWrite(m3, LOW);
    digitalWrite(m4, LOW);
}
else if (angle>-10 && angle<=20)
{
    digitalWrite(m1, LOW);
    digitalWrite(m2, LOW);
    digitalWrite(m3, LOW);
    digitalWrite(m4, LOW);
}
else if (angle>20 && angle<=90)
{
    digitalWrite(m1, HIGH);
    digitalWrite(m2, LOW);
    digitalWrite(m3, HIGH);
    digitalWrite(m4, LOW);
}
else if (angle>90 && angle<=135)
{
    digitalWrite(m1, LOW);
    digitalWrite(m2, LOW);
    digitalWrite(m3, HIGH);
    digitalWrite(m4, LOW);
}
else if(angle>135)
{
    digitalWrite(m1, HIGH);
    digitalWrite(m2, LOW);
    digitalWrite(m3, HIGH);
    digitalWrite(m4, HIGH);
}

}
